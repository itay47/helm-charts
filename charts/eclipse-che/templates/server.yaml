{{- if .Values.server.enabled }}
{{- if .Values.server.serviceAccount.create }}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "server.serviceAccountName" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "server.labels" . | nindent 4 }}
  {{- with .Values.server.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
{{- if .Values.server.rbac.create }}
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ include "server.serviceAccountName" . }}
  labels:
    {{- include "server.labels" . | nindent 4 }}
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: {{ include "server.serviceAccountName" . }}
  namespace: {{ .Release.Namespace }}
{{- end }}

{{- end }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "server.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "server.selectorLabels" . | nindent 4 }}
data:
  {{- if .Values.server.ingress.enabled }}
  {{- $public_host := (index .Values.server.ingress.hosts 0).host }}
  CHE_HOST: {{ $public_host }}
  CHE_INFRA_KUBERNETES_INGRESS_DOMAIN: {{ $public_host }}
  {{- $http_schema := "http" }}
  {{- $websocket_schema := "ws" }}
  {{- if .Values.server.ingress.tls }}
    {{- $http_schema = "https" }}
    {{- $websocket_schema = "wss" }}
  {{- end }}
  CHE_API: {{ $http_schema }}://{{ $public_host }}/api
  CHE_WEBSOCKET_ENDPOINT:  {{ $websocket_schema }}://{{ $public_host }}/api/websocket
  CHE_INFRA_KUBERNETES_BOOTSTRAPPER_BINARY__URL: https://{{ $public_host }}/agent-binaries/linux_amd64/bootstrapper/bootstrapper
  {{- end }}

  CHE_PORT: "8080"
  CHE_METRICS_PORT: "8087"
  CHE_API_INTERNAL: http://{{ include "server.fullname" . }}.{{ .Release.Namespace }}.svc:{{ .Values.server.service.port }}/api

  {{- if .Values.devfileRegistry.enabled }}
    {{- if .Values.devfileRegistry.ingress.enabled }}
      {{- if .Values.devfileRegistry.ingress.hosts }}
        {{- $devfile_public_host := (index .Values.devfileRegistry.ingress.hosts 0).host }}
        {{- $devfile_http_schema := "http" }}
        {{- if .Values.devfileRegistry.ingress.tls }}
          {{- $devfile_http_schema = "https" }}
        {{- end }}
  CHE_WORKSPACE_DEVFILE__REGISTRY__URL: {{ $devfile_http_schema }}://{{ $devfile_public_host }}
      {{- end }}
    {{- end }}
  CHE_WORKSPACE_DEVFILE__REGISTRY__INTERNAL__URL: http://{{ include "devfile-registry.fullname" . }}.{{ .Release.Namespace }}.svc:{{ .Values.devfileRegistry.service.port }}
  {{- end }}

  {{- if .Values.pluginRegistry.enabled }}
    {{- if .Values.pluginRegistry.ingress.enabled }}
      {{- if .Values.pluginRegistry.ingress.hosts }}
        {{- $plugin_public_host := (index .Values.pluginRegistry.ingress.hosts 0).host }}
        {{- $plugin_http_schema := "http" }}
        {{- if .Values.pluginRegistry.ingress.tls }}
          {{- $plugin_http_schema = "https" }}
        {{- end }}
  CHE_WORKSPACE_PLUGIN__REGISTRY__URL: {{ $plugin_http_schema }}://{{ $plugin_public_host }}/v3
      {{- end }}
    {{- end }}
  CHE_WORKSPACE_PLUGIN__REGISTRY__INTERNAL__URL: http://{{ include "plugin-registry.fullname" . }}.{{ .Release.Namespace }}.svc:{{ .Values.pluginRegistry.service.port }}/v3
  {{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "server.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "server.labels" . | nindent 4 }}
spec:
  revisionHistoryLimit: 2
  strategy:
    type: Recreate
  replicas: {{ .Values.server.replicaCount }}
  selector:
    matchLabels:
      {{- include "server.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.server.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "server.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.server.podSecurityContext | nindent 8 }}
      serviceAccountName: {{ include "server.serviceAccountName" . }}
      containers:
        - name: server
          securityContext:
            {{- toYaml .Values.server.securityContext | nindent 12 }}
          image: {{ include "server.image" . }}
          imagePullPolicy: {{ .Values.server.image.pullPolicy }}
          envFrom:
            - configMapRef:
                name: {{ include "server.fullname" . }}
          env:
            {{- .Values.server.env | toYaml | nindent 12 }}
          ports:
            - containerPort: 8080
              name: http
            - containerPort: 8000
              name: http-debug
            - containerPort: 8888
              name: jgroups-ping
            - containerPort: 8087
              name: http-metrics
          livenessProbe:
            httpGet:
              path: /api/system/state
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 120
            timeoutSeconds: 10
          readinessProbe:
            httpGet:
              path: /api/system/state
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 15
            timeoutSeconds: 60
          resources:
            {{- toYaml .Values.server.resources | nindent 12 }}
      {{- with .Values.server.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.server.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.server.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "server.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "server.selectorLabels" . | nindent 4 }}
spec:
  type: {{ .Values.server.service.type }}
  ports:
    - port: {{ .Values.server.service.port }}
      targetPort: http
      protocol: TCP
      name: http
    - name: metrics
      port: 8087
      protocol: TCP
      targetPort: 8087
  selector:
    {{- include "server.selectorLabels" . | nindent 4 }}
---
{{- if .Values.server.ingress.enabled -}}
{{- $fullName := include "server.fullname" . -}}
{{- $svcPort := .Values.server.service.port -}}
{{- if and .Values.server.ingress.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey .Values.server.ingress.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.server.ingress.annotations "kubernetes.io/ingress.class" .Values.server.ingress.className}}
  {{- end }}
{{- end }}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "server.labels" . | nindent 4 }}
  {{- with .Values.server.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if and .Values.server.ingress.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ .Values.server.ingress.className }}
  {{- end }}
  {{- if .Values.server.ingress.tls }}
  tls:
    {{- range .Values.server.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.server.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            {{- if and .pathType (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion) }}
            pathType: {{ .pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
              {{- else }}
              serviceName: {{ $fullName }}
              servicePort: {{ $svcPort }}
              {{- end }}
          {{- end }}
    {{- end }}
{{- end }}

{{- end }}
