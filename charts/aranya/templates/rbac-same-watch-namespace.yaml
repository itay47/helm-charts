{{- if or (not .Values.watchNamespace) (eq (.Values.watchNamespace | toString) .Release.Namespace) }}
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ include "aranya.fullname" . }}:controller
  namespace: {{ .Release.Namespace }}
rules:
{{- if (contains .Values.config.aranya.leaderElection.lock.type "endpoints") }}
- apiGroups: [""]
  resources:
  - endpoints
  verbs:
  - create
  - get
  - update
  - patch
{{- end }}
{{- if (contains .Values.config.aranya.leaderElection.lock.type "leases") }}
- apiGroups: ["coordination.k8s.io"]
  resources:
  - leases
  verbs:
  - create
  - get
  - update
  - patch
{{- end }}
- apiGroups: [""]
  resources:
  # to manage connectivity/sftp service
  - services
  verbs:
  - get
  - list
  - watch
  - update
  - create
  - patch
  - delete
- apiGroups: [""]
  resources:
  # to manage kubernetes node certificates
  - secrets
  verbs:
  - get
  - list
  - watch
  - update
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ include "aranya.fullname" . }}:controller
  namespace: {{ .Release.Namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ include "aranya.fullname" . }}:controller
subjects:
- kind: ServiceAccount
  name: {{ include "aranya.serviceAccountName" . }}
  namespace: {{ .Release.Namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ include "aranya.fullname" . }}:virtualnode
  namespace: {{ .Release.Namespace }}
rules:
- apiGroups: [""]
  resources:
  # to watch pods change and deliver command to edge devices
  - pods
  # to update pods status according to edge devices messages
  - pods/status
  - pods/exec
  - pods/log
  - pods/attach
  - pods/portforward
  verbs:
  - create # create virtual pod
  - get
  - list
  - watch
  - update
  - patch
  - delete # finalize pod resource
- apiGroups: [""]
  resources:
  - pods/ephemeralcontainers
  verbs:
  - get
  - list
  - watch
{{- if or .Values.config.aranya.managed.podRoles .Values.config.aranya.managed.virtualPodRoles }}
- apiGroups: ["rbac.authorization.k8s.io"]
  resources:
  - roles
  verbs:
  - create
  - get
  - list
  - watch
  - update
  - patch
{{- end }}
{{- if .Values.config.virtualnode.storage.enabled }}
- apiGroups: [""]
  resources:
  - persistentvolumeclaims
  verbs:
  - get
  - list
  - watch
{{- end }}
- apiGroups: [""]
  resources:
  # to record pod events
  - events
  verbs:
  - create
  - patch
- apiGroups: [""]
  resources:
  # to manage kubernetes node certificates and fetch secrets required by pods for edge devices
  - secrets
  verbs:
  - get
  - list
  - watch
  - update
  - create
  - patch
- apiGroups: [""]
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
{{- if (contains .Values.config.aranya.leaderElection.lock.type "configmaps") }}
  - create
  - update
  - patch
{{- end }}
# control EdgeDevices
- apiGroups: ["aranya.arhat.dev"]
  resources:
  - edgedevices
  verbs:
  - list
  - get
  - watch
  - delete # finalize edgedevice resources
- apiGroups: ["aranya.arhat.dev"]
  resources:
  - edgedevices/status
  verbs:
  - update
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ include "aranya.fullname" . }}:virtualnode
  namespace: {{ .Release.Namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ include "aranya.fullname" . }}:virtualnode
subjects:
- kind: ServiceAccount
  name: {{ include "aranya.serviceAccountName" . }}
  namespace: {{ .Release.Namespace }}
{{- end }}
